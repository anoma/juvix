* Hello World

In the following example a Juvix file is compiled using the C backend.

#+begin_src
-- tests/positive/MiniC/HelloWorld/Input.juvix
module Input;

axiom String : Type;

compile String {
  c ↦ "char*";
};

axiom Action : Type;

compile Action {
  c ↦ "int";
};

axiom put-str-ln : String → Action;

compile put-str-ln {
  c ↦ "putStrLn";
};

main : Action;
main := put-str-ln "hello world!";

end;
#+end_src


The result is compiled to WASM using [[https://llvm.org][Clang]] and then executed using [[https://wasmer.io][wasmer]].

NB: Set the =WASI_SYSROOT_PATH= environment variable to the root of the WASI sysroot. See [[../../getting-started/dependencies.md][Installing dependencies]] for instructions on how to install the sysroot.

#+begin_src shell
cd tests/positive/MiniC/HelloWorld
juvix compile Input.juvix
wasmer Input.wasm
#+end_src

You should see the output: =hello world!=
