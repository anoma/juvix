name: The Juvix compiler CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - review_requested
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  STACKFLAGS: --pedantic

jobs:
  ormolu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: mrkkrp/ormolu-action@v6
        with:
          extra-args: >-
            --ghc-opt -XDerivingStrategies
            --ghc-opt -XImportQualifiedPost
            --ghc-opt -XMultiParamTypeClasses
            --ghc-opt -XStandaloneDeriving
            --ghc-opt -XTemplateHaskell
            --ghc-opt -XUnicodeSyntax

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jidicula/clang-format-action@v4.9.0
        with:
          clang-format-version: '15'
          check-path: 'runtime/src'

  hlint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: 'Set up HLint'
      uses: rwe/actions-hlint-setup@v1
      with:
        version: '3.4'
    - name: 'Run HLint'
      uses: rwe/actions-hlint-run@v2.0.1
      with:
        path: '["src/", "app/", "test/"]'
        fail-on: warning

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args:
          trailing-whitespace --all-files
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args:
          end-of-file-fixer --all-files
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args:
          check-yaml --all-files
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args:
          check-added-large-files --all-files
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args:
          check-case-conflict --all-files
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args:
          mixed-line-ending --all-files

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        ghc: ["9.2.5"]
    steps:
      - name: Checkout our repository
        uses: actions/checkout@v2
        with:
          path: main
          submodules: true

      - uses: actions/cache@v3
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack-global-${{ hashFiles('main/stack.yaml') }}-${{ hashFiles('main/package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-stack-global-

      - uses: actions/cache@v3
        name: Cache .stack-work
        with:
          path: main/.stack-work
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack-work-${{ hashFiles('main/stack.yaml') }}-${{ hashFiles('main/package.yaml') }}-${{ hashFiles('main/**/*.hs') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-stack-work-

      - uses: haskell/actions/setup@v1
        name: Setup Haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          enable-stack: true
          stack-version: 'latest'

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: |
            C:/Program Files/LLVM
            ./llvm
          key: ${{ runner.os }}-llvm-13

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15.0"
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Build Project
        run: |
          cd main
          make runtime
