-- Coercions
module test063;

import Stdlib.Prelude open;

trait
type T1 A :=
  mkT1@{
    pp : A -> A;
  };

open T1 using {mkT1} public;

trait
type T2 A :=
  mkT2@{
    pp : A -> A;
  };

open T2 using {mkT2} public;

trait
type T3 A :=
  mkT3@{
    pp : A -> A;
  };

open T3 using {mkT3} public;

trait
type T4 A :=
  mkT4@{
    pp : A -> A;
  };

open T4 using {mkT4} public;

instance
instT1 {A} : T1 A :=
  mkT1@{
    pp := id;
  };

coercion instance
fromT1toT2 {A} {{M : T1 A}} : T2 A :=
  mkT2@{
    pp := T1.pp {{M}};
  };

coercion instance
fromT2toT3 {A} {{M : T2 A}} : T3 A :=
  mkT3@{
    pp := T2.pp {{M}};
  };

coercion instance
fromT2toT4 {A} {{M : T2 A}} : T4 A :=
  mkT4@{
    pp := T2.pp {{M}};
  };

instance
instT4 : T4 String :=
  mkT4@{
    pp (s : String) : String := s ++str "!";
  };

trait
type U A :=
  mkU@{
    pp : A -> A;
  };

open U using {mkU} public;

trait
type U1 A :=
  mkU1@{
    pp : A -> A;
  };

open U1 using {mkU1} public;

trait
type U2 A :=
  mkU2@{
    pp : A -> A;
  };

open U2 using {mkU2} public;

coercion instance
fromU1toU {A} {{U1 A}} : U A :=
  mkU@{
    pp := U1.pp;
  };

coercion instance
fromU2toU {A} {{U2 A}} : U A :=
  mkU@{
    pp := U2.pp;
  };

instance
instU2 : U2 String := mkU2 id;

f {A} {{U A}} : A -> A := U.pp;

g {A} {{U1 A}} : A -> A := f;

h {A} {{U2 A}} : A -> A := f;

trait
type W1 A := mkW1;

open W1 using {mkW1} public;

trait
type W2 A B := mkW2;

open W2 using {mkW2} public;

coercion instance
fromW2toW1 {A B} {{W2 A B}} : W1 A := mkW1;

instance
instW2 : W2 String Nat := mkW2;

wid {A} {{W1 A}} : A -> A := id;

trait
type T A B := mkT;

open T using {mkT} public;

instance
inst1 {A} : T A String := mkT;

instance
inst2 {B} : T String B := mkT;

idT {{T String Nat}} : String -> String := id;

idT' {{T String String}} : String -> String := id;

main : IO :=
  printStringLn (T1.pp "a")
    >>> printStringLn (T2.pp "b")
    >>> printStringLn (T3.pp "c")
    >>> printStringLn (T4.pp "d")
    >>> printStringLn (U.pp "e")
    >>> printStringLn (f "f")
    >>> printStringLn (g {{mkU1 id}} "g")
    >>> printStringLn (h "h")
    >>> printStringLn (wid (idT "a"));
