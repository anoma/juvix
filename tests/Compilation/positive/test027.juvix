-- Church numerals
module test027;

import Stdlib.Prelude open hiding {toNat};

Num : Type := {A : Type} → (A → A) → A → A;

czero : Num
  | {_} f x := x;

csuc : Num → Num
  | n {_} f := f ∘ n {_} f;

num : Nat → Num
  | zero := czero
  | (suc n) := csuc (num n);

add : Num → Num → Num
  | n m {_} f := n {_} f ∘ m {_} f;

mul : Num → Num → Num
  | n m {_} := n {_} ∘ m {_};

isZero : Num → Bool
  | n := n {_} (const false) true;

toNat : Num → Nat
  | n := n {_} ((+) 1) 0;

main : IO :=
  printNatLn (toNat (num 7))
    >> printNatLn (toNat (add (num 7) (num 3)))
    >> printNatLn (toNat (mul (num 7) (num 3)));
