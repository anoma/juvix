module test078;

import Stdlib.Data.Nat open hiding {fromNat};
import Stdlib.Debug.Trace open;
import Stdlib.Function open using {>->; >>};
import Stdlib.Data.List open;
import Stdlib.Trait.FromNatural open;
import Stdlib.Trait.Functor open;
import Stdlib.System.IO open;

builtin uint8
axiom UInt8 : Type;

builtin uint8-from-nat
axiom uint8FromNat : Nat -> UInt8;

builtin uint8-to-nat
axiom toNat : UInt8 -> Nat;

instance
UInt8FromNaturalI : FromNatural UInt8 :=
  mkFromNatural@{
    fromNat := uint8FromNat
  };

n1 : UInt8 := fromNat 1;

n2 : UInt8 := fromNat 0xff;

n3 : UInt8 := fromNat 0x102;

l1 : UInt8 := 1;

l2 : UInt8 := 0xee;

l3 : UInt8 := 0x103;

xs : List UInt8 := [l1; l2; l3; 2];

printUInt8Ln : UInt8 -> IO := toNat >> printNatLn;

printListUInt8Ln : List UInt8 -> IO := map toNat >> Show.show >> printStringLn;

main : IO :=
  printUInt8Ln n1
    >>> printUInt8Ln n2
    >>> printUInt8Ln n3
    >>> printNatLn (toNat l1)
    >>> printNatLn (toNat l2)
    >>> printNatLn (toNat l3)
    >>> printNatLn (toNat 0xf0)
    >>> printListUInt8Ln xs;
