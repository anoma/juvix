-- recursive functions
module test020;

import Stdlib.Prelude open;

-- McCarthy's 91 function
terminating
f91 : Nat → Nat
  | n := ite (n > 100) (sub n 10) (f91 (f91 (n + 11)));

-- subtraction by increments
terminating
subp : Nat → Nat → Nat
  | i j := ite (i == j) 0 (subp i (j + 1) + 1);

main : IO :=
  printNatLn (f91 101)
    >>> printNatLn (f91 95)
    >>> printNatLn (f91 16)
    >>> printNatLn (f91 5)
    >>> printNatLn (subp 101 1)
    >>> printNatLn (subp 11 5)
    >>> printNatLn (subp 10 4)
    >>> printNatLn (subp 1000 600)
    >>> printNatLn (subp 10000 6000);
