-- Patterns in definitions
module test086;

import Stdlib.Prelude open;

f (p : Pair Nat Nat) : Nat :=
  let
    (x, y) := p;
  in x + 2 * y;

type R :=
  mkR@{
    x : Nat;
    y : Nat;
  };

open R using {mkR} public;

rr : R :=
  mkR@{
    x := 1;
    y := 2;
  };
 (px, py) : Pair Nat Nat := 1, 2;

g (r : R) : Nat :=
  let
    mkR@{x := x; y} := r;
  in x + 2 * y;
 mkR@{x := rx; y := ry} : R := rr;

main : Nat := f (px, py) + g rr + f (rx, ry);
