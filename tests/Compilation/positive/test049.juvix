module test049;

open import Stdlib.Prelude hiding {+;*;div};
open import Stdlib.Data.Int.Ord;
open import Stdlib.Data.Int;

f : Int -> Nat;
f (negSuc n) := n;
f (ofNat n) := n;

main : IO;
main := printStringLn (intToString 1)
   >> printStringLn (intToString -1)
   >> printStringLn (intToString (ofNat 1))
   >> printStringLn (intToString (negSuc 0))
   >> printStringLn (intToString (ofNat (suc zero)))
   >> printStringLn (intToString (negSuc zero))
   >> printStringLn (natToString (f 1))
   >> printNatLn (f (-1))
   >> printNatLn (f (ofNat (suc zero)))
   >> printNatLn (f (negSuc (suc zero)))
   >> printBoolLn (-1 == -2)
   >> printBoolLn (-1 == -1)
   >> printBoolLn (1 == 1)
   >> printBoolLn (-1 == 1)
   >> printStringLn (intToString (-1 + 1))
   >> printStringLn (intToString (negNat (suc zero)))
   >> printStringLn (intToString (let g : Nat -> Int := negNat in g (suc zero)))
   >> printStringLn (intToString (neg -1))
   >> printStringLn (intToString (let g : Int -> Int := neg in g -1))
   >> printStringLn (intToString (-2 * 2))
   >> printStringLn (intToString (div 4 -2))
   >> printStringLn (intToString (2 - 2))
   >> printBoolLn (nonNeg 0)
   >> printBoolLn (nonNeg -1);
