-- fast exponentiation
module test021;

open import Stdlib.Prelude;
open import Stdlib.Data.Nat.Ord;

terminating
power' : Nat → Nat → Nat → Nat;
power' acc a b :=
  if (b == 0)
    acc
    (if (mod b 2 == 0)
      (power' acc (a * a) (div b 2))
      (power' (acc * a) (a * a) (div b 2)));

power : Nat → Nat → Nat;
power := power' 1;

main : IO;
main :=
  printNatLn (power 2 3) >>
  printNatLn (power 3 7) >>
  printNatLn (power 5 11)

end;
