-- builtin list
module test059;

import Stdlib.Data.Nat open;
import Stdlib.System.IO open;

syntax infixr 5 ::;
builtin list
type List (a : Type) :=
  | nil : List a
  | :: : a â†’ List a â†’ List a;

mylist : List Nat;
mylist := [1; 2; 3 + 1];

mylist2 : List (List Nat);
mylist2 := [[10]; [2]; 3 + 1 :: nil];

head : {a : Type} -> a -> List a -> a;
head a [] := a;
head a [x; _] := x;
head _ (h :: _) := h;

main : Nat;
main := head 50 mylist + head 50 (head [] mylist2);
