-- Mutually recursive let expressions
module test039;

open import Stdlib.Prelude;

main : IO;
main :=
  let
    Ty : Type;
    Ty := Nat;
    odd : _;
    even : _;
    unused : _;
    odd zero := false;
    odd (suc n) := not (even n);
    unused := 123;
    even zero := true;
    even (suc n) := not (odd n);
    plusOne : Ty â†’ Ty;
    plusOne n := n + 1;
  in printBoolLn (odd (plusOne 13))
    >> printBoolLn (even (plusOne 12));
