-- tail recursion
module test009;

import Stdlib.Prelude open;

sum' (acc : Nat) : Nat → Nat
  | zero := acc
  | (suc x) := sum' (suc x + acc) x;

sum : Nat → Nat := sum' 0;

fact' (acc : Nat) : Nat → Nat
  | zero := acc
  | (suc x) := fact' (acc * suc x) x;

fact : Nat → Nat := fact' 1;

main : IO :=
  printNatLn (sum 10000)
    >> printNatLn (fact 5)
    >> printNatLn (fact 10)
    >> printNatLn (fact 12);
