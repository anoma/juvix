module Functor;

syntax fixity fmap := binary {assoc := left};

trait
type Functor (f : Type -> Type) :=
  mkFunctor@{
    syntax operator <$> fmap;
    <$> : {A B : Type} -> (A -> B) -> f A -> f B;
  };

open Functor using {mkFunctor} public;

fmap
  {f : Type -> Type}
  {{Functor f}}
  {A B : Type}
  (fun : A -> B)
  (x : f A)
  : f B := fun Functor.<$> x;
