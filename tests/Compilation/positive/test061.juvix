--- Traits
module test061;

import Stdlib.Prelude open hiding {Show; mkShow; show};

trait
type Show A :=
  mkShow {
    show : A → String
  };

instance
showBool : Show Bool := mkShow (show := λ{x := if x "true" "false"});

instance
showNat : Show Nat := mkShow (show := natToString);

f {A} : {{Show A}} → A → String
  | x := Show.show x;

main : IO :=
  printStringLn (Show.show true) >>
  printStringLn (f false) >>
  printStringLn (Show.show 3);
