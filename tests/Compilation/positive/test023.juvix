-- mutual recursion
module test023;

import Stdlib.Prelude open;

terminating
f : Nat → Nat

  | x := ite (x < 1) 1 (2 * x + g (sub x 1));

terminating
g : Nat → Nat
  | x := ite (x < 1) 1 (x + h (sub x 1));

terminating
h : Nat → Nat
  | x := ite (x < 1) 1 (x * f (sub x 1));

main : IO := printNatLn (f 5) >>> printNatLn (f 10) >>> printNatLn (f 20);
