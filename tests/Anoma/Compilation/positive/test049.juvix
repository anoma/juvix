-- Builtin Int

module test049;

import Stdlib.Prelude open;
import Stdlib.Debug.Trace open;

f : Int -> Nat
  | (Int.negSuc n) := n
  | (Int.ofNat n) := n;

main : Int :=
  trace (Int.fromNat 1)
    >-> trace (Int.fromNat (suc zero))
    >-> trace (f -1)
    >-> trace (f (fromNat (suc zero)))
    >-> trace (f (Int.negSuc (suc zero)))
    >-> trace (1 == -1)
    >-> trace (Int.neg -1)
    >-> trace
      (let
        g : Int -> Int := Int.neg;
      in g -1)
    >-> trace (-2 * -2)
    >-> trace (Int.nonNeg 0)
    >-> trace (Int.nonNeg -1)
    >-> trace (0 < 0)
    >-> trace (0 <= 0)
    >-> trace (0 < 1)
    >-> trace (-1 <= 0)
    >-> trace (mod 4 -3)
    >-> div -6 -3;
