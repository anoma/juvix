module AmbiguousInstances;

type Unit := unit;
open Unit;

type Box A B := box A B;
open Box;

trait
type T A := mkT {pp : A → A};
open T using {mkT};

instance
unitT : T Unit :=
  mkT@{
    pp := λ {_ := unit}
  };

ppBox {A B} {{T A}} : Box A B → Box A B
  | (box x y) := box (T.pp x) y;

instance
boxT {A} {{T A}} : T (Box A Unit) :=
  mkT@{
    pp := ppBox
  };

instance
boxTUnit {B} : T (Box Unit B) :=
  mkT@{
    pp := λ {x := x}
  };

main : Box Unit Unit := T.pp (box unit unit);
