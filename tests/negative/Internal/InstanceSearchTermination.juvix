module InstanceSearchTermination;

import Stdlib.Prelude open;

trait
type T1 A B C := mkT1;
open T1;

trait
type T2 A B := mkT2;
open T2;

trait
type T3 A := mkT3;
open T3;

coercion instance
coe1 {A B} {{T2 A B}} : T3 A := mkT3;

coercion instance
coe2 {A B} {{T1 A A A}} : T2 B A := mkT2;

instance
inst1 {A} : T1 A (List A) (List A) := mkT1;

f {A} {{T3 A}} : A -> A := id;

main : Nat := f 0;
