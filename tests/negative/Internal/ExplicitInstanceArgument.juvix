module ExplicitInstanceArgument;

type Unit := unit;
open Unit;

type Box A := box A;
open Box;

trait
type T A := mkT {pp : A → A};

open T using {mkT};

instance
unitT : T Unit :=
  mkT@{
    pp := λ {_ := unit}
  };

instance
boxT {A} (x : Box A) : T (Box A) :=
  mkT@{
    pp := \ {_ := x}
  };

main : Box Unit := T.pp (box unit);
