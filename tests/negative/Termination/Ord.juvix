module Ord;

import Data.Nat;
open Data.Nat;

type Ord :=
  | ZOrd : Ord
  | SOrd : Ord -> Ord
  | Lim : (ℕ -> Ord) -> Ord;

open Ord public;

addord : Ord -> Ord -> Ord
  | ZOrd y := y
  | (SOrd x) y := SOrd (addord x y)
  | (Lim f) y := Lim (aux-addord f y);

aux-addord : (ℕ -> Ord) -> Ord -> ℕ -> Ord
  | f y z := addord (f z) y;
