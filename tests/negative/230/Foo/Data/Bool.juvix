module Foo.Data.Bool;

import Stdlib.Data.Bool;

type Bool :=
  | true : Bool
  | false : Bool;

not : Bool → Bool;
not true := false;
not false := true;

syntax infixr 2 ||;
|| : Bool → Bool → Bool;
|| false a := a;
|| true _ := true;

syntax infixr 2 &&;
&& : Bool → Bool → Bool;
&& false _ := false;
&& true a := a;

if : {A : Type} → Bool → A → A → A;
if true a _ := a;
if false _ b := b;
