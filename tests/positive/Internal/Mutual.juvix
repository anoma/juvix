module Mutual;

type Bool :=
  | true : Bool
  | false : Bool;

open Bool using {true; false} public;

type Nat :=
  | zero : Nat
  | suc : Nat â†’ Nat;

open Nat using {zero; suc} public;

not : _
  | false := true
  | true := false;

odd : _

  | zero := false
  | (suc n) := even n;

even : _

  | zero := true
  | (suc n) := odd n;
