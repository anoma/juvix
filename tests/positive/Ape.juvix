module Ape;

builtin string
axiom String : Type;

syntax fixity seq := binary {assoc := left};
syntax fixity sub := binary {assoc := right; above := [seq]};
syntax fixity ladd := binary {assoc := left; above := [sub]};
syntax fixity radd := binary {assoc := right; same := ladd};
syntax fixity mul := binary {assoc := left; above := [ladd]};

syntax operator * mul;
axiom * : String → String → String;

syntax operator - sub;
axiom - : String → String → String;

syntax operator >>> seq;
axiom >>> : String → String → String;

syntax operator + ladd;
axiom + : String → String → String;

syntax operator ++ radd;
axiom ++ : String → String → String;

axiom f : String → String;

x : String := "" + ("" ++ "");

axiom wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww : String → String;

nesting : String :=
  wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
    (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
      (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
        (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
          (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
            (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
              (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                  (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                    (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                      (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                        (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                          (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                            (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                              (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                                (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                                  (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                                    (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                                      (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                                        (wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
                                          ("" + "" + "" + "" + ""))))))))))))))))))));

t : String :=
  "Hellooooooooo"
    >>> "Hellooooooooo"
    >>> "Hellooooooooo"
    >>> "Hellooooooooo"
    >>> "Hellooooooooo"
    >>> "Hellooooooooo"
    >>> "Hellooooooooo"
    >>> "Hellooooooooo"
      + "Hellooooooooo"
      + "Hellooooooooo"
      + ("Hellooooooooo"
        ++ "Hellooooooooo"
        ++ "Hellooooooooo"
        ++ "Hellooooooooo"
        ++ "Hellooooooooo"
        ++ "Hellooooooooo")
      + "Hellooooooooo"
      + "Hellooooooooo"
        * "Hellooooooooo"
        * "Hellooooooooo"
        * "Hellooooooooo"
        * "Hellooooooooo"
        * "Hellooooooooo"
        * "Hellooooooooo";
