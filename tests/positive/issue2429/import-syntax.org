#+title: Import Syntax

The goal is to clearly distinguish what syntax is primitive and what is only
sugar.

* Primitive statements
Primitive imports are the opens that we process during scoping. They are only
convenient to make the code cleaner. They are not part of the ast.
** Import
Primitive import statements are:
1. =pimport A=.
2. =pimport A as B [using|hiding {..}]=. This cannot be derived because we don't want B to confict
   with another import with the same alias or local module with the same name.
** Open
1. =popen A [using|hiding {..}] [public]=.

* Derived statements
Derived imports are the opens that we parse and desugar into primitives during scoping.
** Import (public)
1. =import A as B params@(using/hiding {..}) public [short-open]=. Equvialent to
   #+begin_example
   import A;
   module B;
     open A params public;
   end;
   open B (with short-open using/hiding and public); -- only when short-open is present
   #+end_example
   The import public modifier is required. The =as B= alias, the
   =using/hiding= and the =short-open= are optional. =short-open= refers to an
   open statement without a module name.

** Open
Exactly the same as primitive open.
