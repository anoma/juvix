module M;

type ℕ :=
  | z : ℕ
  | s : ℕ → ℕ;

nat : Type;
nat := ℕ;

nat2 : Type;
nat2 := nat;

syntax infixl 1 +;
+ : nat2 → nat → nat;
+ z b := b;
+ (s a) b := s (a + b);
