module NestedPatterns;

import Stdlib.Prelude open;

type MyList (A : Type) := myList : List A -> MyList A;

open MyList using {myList} public;

toList : {A : Type} -> MyList A -> List A
  | (myList xs) := xs;

f : MyList Nat -> Nat
  | xs :=
    case toList xs of
      | suc n :: nil := n
      | _ := zero;
