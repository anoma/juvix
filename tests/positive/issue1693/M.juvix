module M;

import Stdlib.Prelude open;

S
  : {A : Type}
    → {B : Type}
    → {C : Type}
    → (A → B → C)
    → (A → B)
    → A
    → C
  | x y z := x z (y z);

K : {A : Type} → {B : Type} → A → B → A
  | x y := x;

I : {A : Type} → A → A := S K (K {_} {Bool});

main : IO :=
  printNatLn
    $ I {Nat} 1
      + I I 1
      + I (I 1)
      + I 1
      + I (I I) I (I I I) 1
      + I I I (I I I (I I)) I (I I) I I I 1;
