module A;

module M;
  module N;
    syntax infix 3 t;
    type T :=
      | t : T;
  end;

  syntax infixr 2 +;
  axiom + : Type → Type → Type;
end;

import M;

f : M.N.T
  | (_ M.N.t _) := Type M.+ Type M.+ M.MType;
