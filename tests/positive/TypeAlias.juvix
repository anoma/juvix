module TypeAlias;

inductive T {
 t : T;
};

 alias : Type;
 alias ≔ T;

 x : alias;
 x ≔ t;

id : Type -> Type;
id x ≔ x;

inductive Pair (A : Type) (B : Type) {
 mkPair : A -> B -> Pair A B;
};

x' : Pair (id alias) alias;
x' ≔ mkPair t t;

end;
