working-directory: ./../../../tests/

tests:
  - name: geb-open
    command:
      - juvix dev geb repl
    stdout:
      contains: "Welcome to the Juvix Geb REPL!"
    exit-status: 0
    
  - name: geb-quit
    command:
      - juvix dev geb repl
    stdout: 
      contains: "geb>"
    stdin: ":quit"
    exit-status: 0

  - name: geb-version-shows-same-juvix-version
    command:
      - juvix dev geb repl
    stdin: ":version"
    stdout:
      matches:
        regex: |
          Welcome to the Juvix Geb REPL!
          Juvix ([0-9]+\.[0-9]+\.[0-9]\-[a-z0-9]+): .*
          Run :help for help.*
    exit-status: 0
    
  - name: geb-check-type-unit
    command:
      - juvix dev geb repl
    stdout:
      contains: "so1"
    stdin: ":type unit"
    exit-status: 0

  - name: geb-check-type-object
    command:
      - juvix dev geb repl
    stdout: 
      contains: "No object inferred for a Geb object"
    stdin: ":type so1"
    exit-status: 0

  - name: geb-check-type-integer
    command:
      - juvix dev geb repl
    stdout: 
      contains: "Nat â†’ Nat"
    stdin: ":t 1"
    exit-status: 0    

  - name: geb-eval-and-operations
    command:
      - juvix dev geb repl
    stdin: "1 + 2"
    stdout: 
      containes: |
        geb> 3
    exit-status: 0    

  - name: geb-eval-with-spaces
    command:
      - juvix dev geb repl
    stdin: "  unit"
    stdout: 
      contains:
        "unit"
    exit-status:    

  - name: geb-load-file
    command:
      shell:
        - bash
      script: |
        cd ./Geb/positive/Core && juvix dev geb repl
    stdin: ":load    test001.geb"
    stdout: 
      contains:
        OK loaded 
    exit-status: 1

  - name: core-to-geb
    command:
      shell:
        - bash
      script: |
        cd ./Geb/positive/Core
        juvix dev core compile -t geb test001.jvc
        [-f test001.lisp ]
    stdout: 
      contains: 
    exit-status: 0

  - name: core-to-geb-only-term
    command:
      shell:
        - bash
      script: |
        cd ./Geb/positive/Core
        juvix dev core compile -t geb test001.jvc --only-term
        [-f test001.geb ]
    stdout: 
      contains: 
    exit-status: 0  

  - name: geb-repl-file
    command:
      - juvix dev geb repl
    args:
      - Geb/positive/Core/test001.geb
    stdout: 
      contains: |
        Ok loaded
    exit-status: 1
    
  - name: geb-repl-file
    command:
      - juvix dev geb repl
    args:
      - Geb/positive/Core/test001.lisp
    stdout: 
      contains: |
        Ok loaded
    exit-status: 1


  - name: geb-root
    command:
      - juvix dev geb repl
    stdin: ":root"
    stdout: 
      matches: |
        Welcom .*
        Juvix .*
        Run .*
        
        geb> .*/tests/
    exit-status: 0

  - name: geb-eval-lisp-file
    command:
      - juvix dev geb eval
    args:
      - Geb/positive/Core/test001.lisp
    stdout: 
      contains: |
        Ok loaded
    exit-status: 1

  - name: geb-eval-geb-file
    command:
      - juvix dev geb eval
    args:
      - Geb/positive/Core/test001.geb
    stdout: 
      contains: |
        Ok loaded
    exit-status: 1
  
  - name: geb-read-file
    command:
      - juvix dev geb read
    args:
      - Geb/positive/Core/test001.geb
    stdout: 
      contains: |
        (app
          (coprod
            so1
            so1)
          (coprod
            so1
            so1)
          (lamb
            (coprod
              so1
              so1)
            (coprod
              so1
              so1)
            (case-on
              so1
              so1
              (coprod
                so1
                so1)
              (index 0)
              (lamb
                so1
                (coprod
                  so1
                  so1)
                (right unit))
              (lamb
                so1
                (coprod
                  so1
                  so1)
                (left unit))))
          (left unit))
    exit-status: 0
