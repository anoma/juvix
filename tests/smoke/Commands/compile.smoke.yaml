working-directory: ./../../../

tests:
  - name: shows-file-argument-for-autocompletion
    command:
      - juvix
      - compile
      - --help
    stdout:
      contains:
        JUVIX_FILE
    exit-status: 0

  - name: hello-world-no-arg
    command:
      shell:
        - bash
      script: |
        cd ./examples/milestone/HelloWorld
        juvix compile
        ./HelloWorld
    exit-status: 0
    stdout: |
      hello world!

  - name: hello-world-no-arg-error
    command:
      shell:
        - bash
      script: |
        temp=$(mktemp -d)
        trap 'rm -rf -- "$temp"' EXIT
        cd ./examples/milestone/
        cp -r HelloWorld "$temp"
        cd "$temp/HelloWorld"
        sed -i '/^main:/d' juvix.yaml
        juvix compile
    exit-status: 1
    stdout: |
     A path to the main file must be given in the CLI or specified in the `main` field of the juvix.yaml file

  - name: hello-world
    command:
      shell:
        - bash
      script: |
        cd ./examples/milestone/HelloWorld
        juvix compile HelloWorld.juvix
        ./HelloWorld
    exit-status: 0
    stdout: |
      hello world!

  - name: option-output-file
    command:
      shell:
        - bash
      script: |
        temp=$(mktemp -d)
        trap 'rm -rf -- "$temp"' EXIT
        cd ./examples/milestone/HelloWorld
        juvix compile -o $temp/Hello HelloWorld.juvix
        $temp/Hello
    exit-status: 0
    stdout: |
      hello world!

  - name: flag-internal-build-dir
    command:
      shell:
        - bash
      script: |
        temp=$(mktemp -d)
        cd ./examples/milestone/HelloWorld
        juvix compile HelloWorld.juvix --internal-build-dir "$temp"
        find "$temp" | wc -l
        rm -rf "$temp"
    stdout:
      matches: |
        \s*([2-9]|[1-9][0-9]+)
    exit-status: 0

  - name: default-output-file-in-invoke-dir
    command:
      shell:
        - bash
      script: |
        temp=$(mktemp -d)
        trap 'rm -rf -- "$temp"' EXIT
        testdir=$PWD/examples/milestone/HelloWorld
        cd $temp
        juvix compile $testdir/HelloWorld.juvix
        ./HelloWorld
    stdout: |
      hello world!
    exit-status: 0

  - name: target-wasm
    command:
      shell:
        - bash
      script: |
        temp=$(mktemp -d)
        trap 'rm -rf -- "$temp"' EXIT
        testdir=$PWD/examples/milestone/HelloWorld
        cd $temp
        juvix compile -t wasm32-wasi $testdir/HelloWorld.juvix
        [ -f HelloWorld.wasm ]
    stdout: ""
    exit-status: 0

  - name: target-geb
    command:
      shell:
        - bash
      script: |
        temp=$(mktemp -d)
        trap 'rm -rf -- "$temp"' EXIT
        testdir=$PWD/tests/Geb/positive/Compilation
        cd $temp
        juvix compile -t geb $testdir/test001.juvix
        [ -f test001.lisp ]
    stdout: ""
    exit-status: 0

  - name: input-file-does-not-exist
    command:
      - juvix
      - compile
      - positive/NonExistingCompileFile.juvix
    stderr:
      contains: |
        positive/NonExistingCompileFile.juvix" does not exist
    exit-status: 1
