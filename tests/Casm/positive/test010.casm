-- functions returning functions

start:
  call main
  jmp end

id:
const:
  [ap] = [fp - 3]; ap++
  ret

g:
  [ap] = 2; ap++
  call id
  ret

f:
  ap += 1
  [ap] = [fp - 3] - 6; ap++
  jmp f_label_1 if [ap - 1] != 0
  call get_regs
  [fp] = [ap - 2] + 2
  [ap] = const; ap++
  [ap] = 8; ap++
  [ap] = 8; ap++
  [ap] = 0; ap++
  [ap] = [fp]; ap++
  ret
f_label_1:
  [ap] = [fp - 3] - 5; ap++
  jmp f_label_2 if [ap - 1] != 0
  call get_regs
  [fp] = [ap - 2] + 2
  [ap] = const; ap++
  [ap] = 8; ap++
  [ap] = 8; ap++
  [ap] = 1; ap++
  [ap] = [fp]; ap++
  ret
f_label_2:
  [ap] = [fp - 3] - 10; ap++
  jmp f_label_3 if [ap - 1] != 0
  call get_regs
  [fp] = [ap - 2] + 2
  [ap] = g; ap++
  [ap] = 9; ap++
  [ap] = 8; ap++
  [ap] = [fp]; ap++
  ret
f_label_3:
  call get_regs
  [fp] = [ap - 2] + 2
  [ap] = id; ap++
  [ap] = 9; ap++
  [ap] = 8; ap++
  [ap] = [fp]; ap++
  ret

main:
  ap += 3
  [ap] = 5; ap++
  call f
  [ap] = 6; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  [fp] = [ap - 1]
  [ap] = 6; ap++
  call f
  [ap] = 5; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  [fp + 1] = [ap - 1] + [fp]
  [ap] = 10; ap++
  call f
  [ap] = 5; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  [fp + 2] = [ap - 1] + [fp + 1]
  [ap] = 11; ap++
  call f
  [ap] = 5; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  [ap] = [ap - 1] + [fp + 2]; ap++
  ret

get_regs:
  call get_ap_reg
  ret
get_ap_reg:
  ret

-- [fp - 3]: closure; [fp - 3 - k]: argument k to closure call
call_closure:
  ap += 1
  -- closure addr
  [fp] = [[fp - 3]]
  -- jmp rel (9 - argsnum)
  jmp rel [[fp - 3] + 2]
  [ap] = [fp - 11]; ap++
  [ap] = [fp - 10]; ap++
  [ap] = [fp - 9]; ap++
  [ap] = [fp - 8]; ap++
  [ap] = [fp - 7]; ap++
  [ap] = [fp - 6]; ap++
  [ap] = [fp - 5]; ap++
  [ap] = [fp - 4]; ap++
  -- jmp rel (9 - sargs)
  jmp rel [[fp - 3] + 1]
  [ap] = [[fp - 3] + 10]; ap++
  [ap] = [[fp - 3] + 9]; ap++
  [ap] = [[fp - 3] + 8]; ap++
  [ap] = [[fp - 3] + 7]; ap++
  [ap] = [[fp - 3] + 6]; ap++
  [ap] = [[fp - 3] + 5]; ap++
  [ap] = [[fp - 3] + 4]; ap++
  [ap] = [[fp - 3] + 3]; ap++
  call [fp]
  ret

end:
