-- functions returning functions

start:
  call main
  jmp end

id:
const:
  [ap] = [fp - 3]; ap++
  ret

g:
  [ap] = 2; ap++
  call id
  ret

f:
  [ap] = [fp - 3] - 6; ap++
  jmp f_label_1 if [ap - 1] != 0
  call get_regs
  -- calloc const
  [ap] = 1; ap++
  [ap] = 8; ap++
  [ap] = 8; ap++
  [ap] = 0; ap++
  [ap] = [ap - 6] + 2; ap++
  ret
f_label_1:
  [ap] = [fp - 3] - 5; ap++
  jmp f_label_2 if [ap - 1] != 0
  call get_regs
  -- calloc const
  [ap] = 1; ap++
  [ap] = 8; ap++
  [ap] = 8; ap++
  [ap] = 1; ap++
  [ap] = [ap - 6] + 2; ap++
  ret
f_label_2:
  [ap] = [fp - 3] - 10; ap++
  jmp f_label_3 if [ap - 1] != 0
  call get_regs
  -- calloc g
  [ap] = 4; ap++
  [ap] = 9; ap++
  [ap] = 8; ap++
  [ap] = [ap - 5] + 2; ap++
  ret
f_label_3:
  call get_regs
  -- calloc id
  [ap] = 7; ap++
  [ap] = 9; ap++
  [ap] = 8; ap++
  [ap] = [ap - 5] + 2; ap++
  ret

main:
  [ap] = 5; ap++
  call f
  [ap] = 6; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  call rel 3
  ret
  nop
  -- [fp - 3] = closure call result
  [ap] = 6; ap++
  call f
  [ap] = 5; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  [ap] = [fp - 3]; ap++
  call rel 3
  ret
  nop
  -- [fp] = sum
  [ap] = [fp - 3] + [fp - 4]; ap++
  [ap] = 10; ap++
  call f
  [ap] = 5; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  [ap] = [fp]; ap++
  call rel 3
  ret
  nop
  [ap] = [fp - 3] + [fp - 4]; ap++
  [ap] = 11; ap++
  call f
  [ap] = 5; ap++
  [ap] = [ap - 2]; ap++
  call call_closure
  [ap] = [ap - 1] + [fp]; ap++
  ret

get_regs:
  call get_ap_reg
  ret
get_ap_reg:
  ret

-- [fp - 3]: closure; [fp - 3 - k]: argument k to closure call
call_closure:
  -- jmp rel (9 - argsnum)
  jmp rel [[fp - 3] + 2]
  [ap] = [fp - 11]; ap++
  [ap] = [fp - 10]; ap++
  [ap] = [fp - 9]; ap++
  [ap] = [fp - 8]; ap++
  [ap] = [fp - 7]; ap++
  [ap] = [fp - 6]; ap++
  [ap] = [fp - 5]; ap++
  [ap] = [fp - 4]; ap++
  -- jmp rel (9 - sargs)
  jmp rel [[fp - 3] + 1]
  [ap] = [[fp - 3] + 10]; ap++
  [ap] = [[fp - 3] + 9]; ap++
  [ap] = [[fp - 3] + 8]; ap++
  [ap] = [[fp - 3] + 7]; ap++
  [ap] = [[fp - 3] + 6]; ap++
  [ap] = [[fp - 3] + 5]; ap++
  [ap] = [[fp - 3] + 4]; ap++
  [ap] = [[fp - 3] + 3]; ap++
  jmp rel [[fp - 3]]
  call const
  ret
  nop
  call g
  ret
  nop
  call id
  ret

end:
