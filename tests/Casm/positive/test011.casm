-- lists

start:
  call main
  jmp end

-- List tag: 0 - nil; 1 - cons
-- Bool: 0 - false; 1 - true

hd:
  [ap] = [[fp - 3] + 1]; ap++
  ret

tl:
  [ap] = [[fp - 3] + 2]; ap++
  ret

null:
  [ap] = [[fp - 3]]; ap++
  jmp null_cons if [ap - 1] != 0
  [ap] = 1; ap++
  ret
null_cons:
  [ap] = 0; ap++
  ret

map:
  ap += 2
  [ap] = [[fp - 4]]; ap++
  jmp map_cons if [ap - 1] != 0
  [ap] = [fp - 4]; ap++
  [fp] = 0
  [fp + 1] = 0
  ret
map_cons:
  [ap] = [[fp - 4] + 2]; ap++
  [ap] = [fp - 3]; ap++
  call map
  [fp] = [ap - 1]
  [ap] = [[fp - 4] + 1]; ap++
  [ap] = [fp - 3]; ap++
  call call_closure
  [fp + 1] = [ap - 1]
  call get_regs
  [ap] = 1; ap++
  [ap] = [fp + 1]; ap++
  [ap] = [fp]; ap++
  [ap] = [ap - 5] + 2; ap++
  ret

add_one:
  [ap] = [fp - 3] + 1; ap++
  ret

sum:
  [ap] = [[fp - 3]]; ap++
  jmp sum_label_1 if [ap - 1] != 0
  [ap] = 0; ap++
  ret
sum_label_1:
  [ap] = [[fp - 3] + 2]; ap++
  call sum
  [ap] = [[fp - 3] + 1]; ap++
  [ap] = [ap - 1] + [ap - 2]; ap++
  ret

main:
  ap += 6
  call get_regs
  [fp] = [ap - 2] + 2
  [ap] = 0; ap++
  call get_regs
  [fp + 1] = [ap - 2] + 2
  [ap] = 1; ap++
  [ap] = 1; ap++
  [ap] = [fp]; ap++
  call get_regs
  [fp + 2] = [ap - 2] + 2
  [ap] = 1; ap++
  [ap] = 0; ap++
  [ap] = [fp + 1]; ap++
  -- tmp[0] == [fp + 2]
  [ap] = [fp + 2]; ap++
  call null
  [fp + 3] = [ap - 1]
  [ap] = [fp + 2]; ap++
  call tl
  call tl
  call null
  [fp + 4] = [fp + 3] + [ap - 1]
  [ap] = [fp + 2]; ap++
  call hd
  [fp + 5] = [fp + 4] + [ap - 1]
  call get_regs
  [ap] = add_one; ap++
  [ap] = 9; ap++
  [ap] = 8; ap++
  [ap] = [fp + 2]; ap++
  [ap] = [ap - 6] + 2; ap++
  call map
  call sum
  [ap] = [fp + 5] + [ap - 1]; ap++
  ret

get_regs:
  call get_ap_reg
  ret
get_ap_reg:
  ret

-- [fp - 3]: closure; [fp - 3 - k]: argument k to closure call
call_closure:
  ap += 1
  -- closure addr
  [fp] = [[fp - 3]]
  -- jmp rel (9 - argsnum)
  jmp rel [[fp - 3] + 2]
  [ap] = [fp - 11]; ap++
  [ap] = [fp - 10]; ap++
  [ap] = [fp - 9]; ap++
  [ap] = [fp - 8]; ap++
  [ap] = [fp - 7]; ap++
  [ap] = [fp - 6]; ap++
  [ap] = [fp - 5]; ap++
  [ap] = [fp - 4]; ap++
  -- jmp rel (9 - sargs)
  jmp rel [[fp - 3] + 1]
  [ap] = [[fp - 3] + 10]; ap++
  [ap] = [[fp - 3] + 9]; ap++
  [ap] = [[fp - 3] + 8]; ap++
  [ap] = [[fp - 3] + 7]; ap++
  [ap] = [[fp - 3] + 6]; ap++
  [ap] = [[fp - 3] + 5]; ap++
  [ap] = [[fp - 3] + 4]; ap++
  [ap] = [[fp - 3] + 3]; ap++
  call [fp]
  ret

end:
