-- eta-expansion

def compose : (Int -> Int) -> (Int -> Int) -> Int -> Int := \f \g \x f (g x);

def expand : Any -> Int -> Any := \f \x f;

def f : Int -> Int := (+) 1;

def g : Int -> Int -> Int := \z compose f (\x x - z);

def h : Int -> Int := compose f (g 3);

def j : Int -> Int -> Int := g;

def k : Int -> Int -> Any -> Int := expand j;

h 13 + j 2 3 + k 9 4 7
