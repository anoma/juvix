-- letrec with type annotations

type Box {
    box : Π A : Type, A → Box A;
};

def unbox : Π A : Type, Box A → A := \(A : Type) \(b : Box A)
    case b of {
        box _ x := x
    };

def id : Π A : Type, A → A := \(A : Type) \(x : A) x;

def g : Π A : Type, A → A := \(A : Type) \(x : A)
    letrec[b h]
        b : Box A := box A x;
        h : Π A : Type, A → A := id;
    in
    h A (unbox A b);

letrec A : Type := Int in
letrec f : A → Int := \(x : A) x
in
g Int (f 4)
