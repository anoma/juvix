-- mutual recursion
module test022;

import Stdlib.Prelude open;

terminating
f : Nat → Nat
  | x := if (x < 1) 1 (2 * x + g (sub x 1));

terminating
g : Nat → Nat
  | x := if (x < 1) 1 (x + h (sub x 1));

terminating
h : Nat → Nat
  | x := if (x < 1) 1 (x * f (sub x 1));

main : Nat := f 5 + f 10 + f 20;
