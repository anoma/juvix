-- tail recursion through higher-order functions
module test018;

import Stdlib.Prelude open;

sumb : Nat → (Nat → Nat → Nat) → Nat → Nat
  | acc f zero := acc
  | acc f (suc x) := f acc x;

terminating
sum' : Nat → Nat → Nat
  | acc x := sumb (x + acc) sum' x;

sum : Nat → Nat := sum' 0;

main : Nat := sum 100;
