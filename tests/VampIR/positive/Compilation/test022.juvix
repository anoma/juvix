-- fast exponentiation
module test022;

import Stdlib.Prelude open;
import Stdlib.Data.Nat.Ord open;

power : Nat → Nat → Nat;
power :=
  let
    {-# unroll: 10 #-}
    terminating
    power' : Nat → Nat → Nat → Nat;
    power' acc a b :=
      let
        acc' : Nat := if (mod b 2 == 0) acc (acc * a);
      in if (b == 0) acc (power' acc' (a * a) (div b 2));
  in power' 1;

main : Nat -> Nat -> Nat;
main := power;
