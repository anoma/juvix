-- pattern matching
module test002;

import Stdlib.Prelude open;

type optbool :=
  | Just : Bool -> optbool
  | Nothing : optbool;

natToBool : Nat -> Bool
  | x := if (x == 0) false true;

boolToNat : Bool -> Nat
  | x := if x 1 0;

{-# public: [b] #-}
main : Nat -> Nat -> Nat
  | a b :=
    boolToNat
      <| Î» {
          | x (Just b) := if x false b
          | _ Nothing := false
        }
        (natToBool a)
        (Just (natToBool b));
