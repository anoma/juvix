-- pattern matching
module test002;

import Stdlib.Prelude open;
import Stdlib.Data.Nat.Ord open;

type optbool :=
  | Just : Bool -> optbool
  | Nothing : optbool;

natToBool : Nat -> Bool;
natToBool x := if (x == 0) false true;

boolToNat : Bool -> Nat;
boolToNat x := if x 1 0;

main : Nat -> Nat -> Nat;
main a b :=
  boolToNat
    $ Î» {
        | x (Just b) := if x false b
        | _ Nothing := false
      }
      (natToBool a)
      (Just (natToBool b));
