-- recursion through higher-order functions
module test014;

import Stdlib.Prelude open;

g : (Nat â†’ Nat) â†’ Nat â†’ Nat
  | f zero := 0
  | f (suc x) := f x;

{-# unroll: 11 #-}
terminating
f : Nat â†’ Nat
  | x := x + g f x;

main : Nat -> Nat := f;
