-- mutual recursion
module test017;

open import Stdlib.Prelude;
open import Stdlib.Data.Nat.Ord;

{-# unroll: 21 #-}
terminating
f : Nat → Nat;
terminating
g : Nat → Nat;
terminating
h : Nat → Nat;

f x := if (x < 1) 1 (2 * x + g (sub x 1));
g x := if (x < 1) 1 (x + h (sub x 1));
h x := if (x < 1) 1 (x * f (sub x 1));

main : Nat → Nat;
main x := f x + f (2 * x) + f (4 * x);
