-- mutual recursion
module test017;

open import Stdlib.Prelude;
open import Stdlib.Data.Nat.Ord;

{-# unroll: 11 #-}
terminating
f : Nat → Nat;
terminating
g : Nat → Nat;
terminating
h : Nat → Nat;

f x := case x | zero := 1 | suc y := 2 * x + g y;
g x := case x | zero := 1 | suc y := x + h y;
h x := case x | zero := 1 | suc y := x * f y;

main : Nat → Nat;
main x := f x + f (2 * x);
