-- mid-square hashing
module test018;

import Stdlib.Prelude open;

pow : Nat -> Nat
  | zero := 1
  | (suc n) := 2 * pow n;

hash' : Nat -> Nat -> Nat
  | (suc n@(suc (suc m))) x :=
    if
      | x < pow n := hash' n x
      | else := mod (div (x * x) (pow m)) (pow 6)
  | _ x := x * x;

hash : Nat -> Nat := hash' 16;

main : Nat -> Nat := hash;
