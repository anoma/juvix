-- mid-square hashing
module test018;

open import Stdlib.Prelude;
open import Stdlib.Data.Nat.Ord;

pow : Nat -> Nat;
pow zero := 1;
pow (suc n) := 2 * pow n;

hash' : Nat -> Nat -> Nat;
hash' (suc n@(suc (suc m))) x :=
  if
    (x < pow n)
    (hash' n x)
    (mod (div (x * x) (pow m)) (pow 6));
hash' _ x := x * x;

hash : Nat -> Nat := hash' 16;

main : Nat -> Nat;
main := hash;
