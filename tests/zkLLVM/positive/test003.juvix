-- inductive types
module test003;

import Stdlib.Prelude open;
import Stdlib.Data.Nat.Ord open;

type enum :=
  | opt0 : enum
  | opt1 : Bool -> enum
  | opt2 : Bool -> Bool -> enum;

natToBool (x : Nat) : Bool := if (x == 0) false true;

main (x y : Nat) : Bool :=
  Î» {
      | opt0 := false
      | (opt1 b) := b
      | (opt2 b c) := if b b c
    }
    (opt2 (natToBool x) (natToBool y));
