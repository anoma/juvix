-- Compute the Nth prime
module prime;

open import Stdlib.Prelude;
open import Data.Int;
open import Data.Int.Ops;

checkDivisible : Int -> List Int -> Bool;
checkDivisible p nil := false;
checkDivisible p (h ∷ t) := if ((p % h) == Int_0) true (checkDivisible p t);

terminating
go : Int -> Int -> List Int -> Int;
go n p lst :=
  if (n == Int_0)
    (head lst)
    (if (checkDivisible p lst)
        (go n (p Data.Int.Ops.+ Int_1) lst)
        (go (n - Int_1) (p Data.Int.Ops.+ Int_1) (p ∷ lst)));

prime : Int -> Int;
prime n := go n Int_2 nil;

axiom Int_16384 : Int;
compile Int_16384 {
  c ↦ "16384";
};

axiom Int_10 : Int;
compile Int_10 {
  c ↦ "10";
};

main : IO;
main := printInt (prime Int_16384);

end;
