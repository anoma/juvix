-- map and fold a list of N integers K times
module mapfold;
  open import Stdlib.Prelude;
  open import Stdlib.Data.Nat.Ord;

  run : Nat → Nat → List Nat → Nat;
  run zero acc lst := acc;
  run (suc n) acc lst := run
    n
    (sub (foldl (+) 0 lst) acc)
    (map suc lst);

  terminating
  gen : Nat → Nat → List Nat;
  gen k n := if (k == n) (k :: nil) (k :: gen (suc k) n);

  main : IO;
  main := printNatLn (run 10000 0 (gen 1 10000));
end;
