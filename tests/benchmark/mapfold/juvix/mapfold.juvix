-- map and fold a list of N integers K times
module mapfold;

import Stdlib.Prelude open;

run : Nat → Nat → List Nat → Nat
  | zero acc lst := acc
  | (suc n) acc lst :=
    run n (sub (foldl (+) 0 lst) acc) (map suc lst);

terminating
gen : Nat → Nat → List Nat
  | k n := if (k == n) (k :: nil) (k :: gen (suc k) n);

main : IO := printNatLn (run 10000 0 (gen 1 10000));
